<?php

namespace Drupal\{{ machine_name }}\Http;

use Drupal\Core\Config\ConfigFactoryInterface;
use Drupal\Core\Http\ClientFactory;
use GuzzleHttp\Client;

/**
 * {{ class_description }}
 *
 * @package {{ package }}
 */
class {{ class }} {

  /**
   * The HTTP client.
   *
   * @var \GuzzleHttp\Client
   */
  protected $client;

  /**
   * Constructs a new HTTP client.
   *
   * @param \Drupal\Core\Http\ClientFactory $factory
   *   The HTTP client factory service.
   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
   *   The configuration factory service.
   */
  public function __construct(ClientFactory $factory, ConfigFactoryInterface $config_factory) {
    $config = $config_factory->get('{{ machine_name }}.settings');

    $this->client = $factory->fromOptions([
      'headers' => [
        'Content-Type' => 'application/json',
        'API-Key' => $config->get('api_key'),
      ],
      'base_uri' => $config->get('hostname'),
    ]);
  }

  {% for endpoint in endpoints %}
  /**
   * Submits a request to the API {{ endpoint.name }} endpoint.
   *
   * @param array $options
   * @param array $filters
   * @return \Psr\Http\Message\ResponseInterface
   * @throws \GuzzleHttp\Exception\GuzzleException
   */
  public function {{ endpoint.name }}(array $options, array $filters = []) {
    $payload = $options;

    if (!empty($filters)) {
      $payload['filter'] = $filters;
    }

    return $this->client->post(
      '/{{ endpoint.uri }}',
      [
        'json' => $payload,
      ]
    );
  }

  {% endfor %}

}
